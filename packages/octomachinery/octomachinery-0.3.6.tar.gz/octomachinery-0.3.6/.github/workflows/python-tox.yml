name: Build/Test/Publish

on:
  create:  # is used for publishing to PyPI and TestPyPI
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any branch but not tag
    - >-
      **
    tags-ignore:
    - >-
      **
  pull_request:
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC

jobs:
  tests:
    if: >-  # https://twitter.com/webKnjaZ/status/1308803017001652225
      github.event_name != 'create' ||
      github.event.ref_type == 'tag'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version:
        - 3.8
        - 3.7
        os:
        - ubuntu-latest
        - ubuntu-16.04
        - macOS-latest
        toxenv:
        - pre-commit-ci
        - check-docs
        - build-docs
        - build-dists
        - python
        - old-deps

    env:
      PY_COLORS: 1
      TOXENV: ${{ matrix.toxenv }}
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: >-
          ${{
            runner.os == 'Linux' &&
            '~/.cache/pip'
            || ''
          }}${{
            runner.os == 'macOS' &&
            '~/Library/Caches/pip'
            || ''
          }}${{
            runner.os == 'Windows' &&
            '~\AppData\Local\pip\Cache'
            || ''
          }}
        key: >-
          ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{
          hashFiles('tox.ini') }}-${{
          hashFiles('pyproject.toml') }}-${{
          hashFiles('.pre-commit-config.yaml') }}-${{
          hashFiles('.pre-commit-config.ci.yaml') }}-${{
          hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: >-
        python -m
        pip install
        --upgrade
        tox
    - name: 'Initialize tox envs: ${{ matrix.toxenv }}'
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --skip-missing-interpreters false
        --notest
    - name: Initialize pre-commit envs if needed
      run: |
        test -d .tox/pre-commit-ci && .tox/pre-commit-ci/bin/python -m pre_commit install-hooks || :
    - name: Test with tox
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv

  publish:
    name: Validate metadata and optionally publish 🐍📦 to PyPI
    needs:
    - tests
    runs-on: ${{ matrix.os }}
    strategy:
      # NOTE: Even though it's one job, it's easier to keep the params in one
      # NOTE: place using a matrix:
      matrix:
        python-version:
        - 3.9
        os:
        - ubuntu-latest
        toxenv:
        - build-dists,metadata-validation

    env:
      PY_COLORS: 1
      TOXENV: ${{ matrix.toxenv }}
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: >-
          ${{
            runner.os == 'Linux' &&
            '~/.cache/pip'
            || ''
          }}${{
            runner.os == 'macOS' &&
            '~/Library/Caches/pip'
            || ''
          }}${{
            runner.os == 'Windows' &&
            '~\AppData\Local\pip\Cache'
            || ''
          }}
        key: >-
          ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}-${{
          hashFiles('tox.ini') }}-${{
          hashFiles('pyproject.toml') }}-${{
          hashFiles('.pre-commit-config.yaml') }}-${{
          hashFiles('.pre-commit-config.ci.yaml') }}-${{
          hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: >-
        python -m
        pip install
        --upgrade
        tox
    - name: 'Initialize tox envs: ${{ matrix.toxenv }}'
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
        --skip-missing-interpreters false
        --notest
    - name: Build dists with tox
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        -vv
    - name: Publish to pypi.org
      if: >-  # "create" workflows run separately from "push" & "pull_request"
        github.event_name == 'create' &&
        github.event.ref_type == 'tag'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}

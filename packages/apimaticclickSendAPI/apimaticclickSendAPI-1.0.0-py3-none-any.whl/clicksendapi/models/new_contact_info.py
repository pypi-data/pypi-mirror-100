# -*- coding: utf-8 -*-

"""
clicksendapi

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class NewContactInfo(object):

    """Implementation of the 'NewContactInfo' model.

    info to create new contact

    Attributes:
        phone_number (string): Your phone number in E.164 format. Must be
            provided if no fax number or email.
        email (string): Your email. Must be provided if no phone number or fax
            number.
        fax_number (string): Your fax number. Must be provided if no phone
            number or email.
        first_name (string): Your first name.
        address_line_1 (string): Your street address
        address_line_2 (string): none
        address_city (string): Your nearest city
        address_state (string): Your current state
        address_postal_code (string): Your current postcode
        address_country (string): Your current country
        organization_name (string): Your organisation name
        custom_1 (string): none
        custom_2 (string): none
        custom_3 (string): none
        custom_4 (string): none
        last_name (string): Your last name

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "phone_number": 'phone_number',
        "email": 'email',
        "fax_number": 'fax_number',
        "first_name": 'first_name',
        "address_line_1": 'address_line_1',
        "address_line_2": 'address_line_2',
        "address_city": 'address_city',
        "address_state": 'address_state',
        "address_postal_code": 'address_postal_code',
        "address_country": 'address_country',
        "organization_name": 'organization_name',
        "custom_1": 'custom_1',
        "custom_2": 'custom_2',
        "custom_3": 'custom_3',
        "custom_4": 'custom_4',
        "last_name": 'last_name'
    }

    def __init__(self,
                 phone_number=None,
                 email=None,
                 fax_number=None,
                 first_name=None,
                 address_line_1=None,
                 address_line_2=None,
                 address_city=None,
                 address_state=None,
                 address_postal_code=None,
                 address_country=None,
                 organization_name=None,
                 custom_1=None,
                 custom_2=None,
                 custom_3=None,
                 custom_4=None,
                 last_name=None):
        """Constructor for the NewContactInfo class"""

        # Initialize members of the class
        self.phone_number = phone_number
        self.email = email
        self.fax_number = fax_number
        self.first_name = first_name
        self.address_line_1 = address_line_1
        self.address_line_2 = address_line_2
        self.address_city = address_city
        self.address_state = address_state
        self.address_postal_code = address_postal_code
        self.address_country = address_country
        self.organization_name = organization_name
        self.custom_1 = custom_1
        self.custom_2 = custom_2
        self.custom_3 = custom_3
        self.custom_4 = custom_4
        self.last_name = last_name

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        phone_number = dictionary.get('phone_number')
        email = dictionary.get('email')
        fax_number = dictionary.get('fax_number')
        first_name = dictionary.get('first_name')
        address_line_1 = dictionary.get('address_line_1')
        address_line_2 = dictionary.get('address_line_2')
        address_city = dictionary.get('address_city')
        address_state = dictionary.get('address_state')
        address_postal_code = dictionary.get('address_postal_code')
        address_country = dictionary.get('address_country')
        organization_name = dictionary.get('organization_name')
        custom_1 = dictionary.get('custom_1')
        custom_2 = dictionary.get('custom_2')
        custom_3 = dictionary.get('custom_3')
        custom_4 = dictionary.get('custom_4')
        last_name = dictionary.get('last_name')

        # Return an object of this model
        return cls(phone_number,
                   email,
                   fax_number,
                   first_name,
                   address_line_1,
                   address_line_2,
                   address_city,
                   address_state,
                   address_postal_code,
                   address_country,
                   organization_name,
                   custom_1,
                   custom_2,
                   custom_3,
                   custom_4,
                   last_name)

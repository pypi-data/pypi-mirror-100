
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ArobasedInfo EndLine ID Jump Number RefJump Stringlines : linelines : lines lineline : jump\n            | asmInstr\n    line : noLinenoLine : EndLinenoLine : RefJump EndLinejump : Jump ID asmCondition EndLine\n    jump : Jump ID EndLineasmCondition : ID info infoinfo : ID\n            | Number\n            | String\n            | ArobasedInfo\n    asmInstr : Jump Number asmCondition EndLineasmInstr : asmValideInstructions EndLineasmValideInstructions : infoasmValideInstructions : asmValideInstructions info'
    
_lr_action_items = {'Jump':([0,1,2,3,4,5,8,15,18,20,23,26,27,],[6,6,-1,-3,-4,-5,-6,-2,-16,-7,-9,-8,-15,]),'EndLine':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,18,19,20,22,23,24,26,27,28,],[8,8,-1,-3,-4,-5,-11,-6,-12,18,20,-17,-13,-14,-2,23,-16,-18,-7,26,-9,27,-8,-15,-10,]),'RefJump':([0,1,2,3,4,5,8,15,18,20,23,26,27,],[11,11,-1,-3,-4,-5,-6,-2,-16,-7,-9,-8,-15,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,25,26,27,],[7,7,-1,-3,-4,-5,16,-11,-6,-12,7,-17,-13,-14,-2,21,21,-16,-18,-7,7,-9,7,-8,-15,]),'Number':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,18,19,20,21,23,25,26,27,],[9,9,-1,-3,-4,-5,17,-11,-6,-12,9,-17,-13,-14,-2,-16,-18,-7,9,-9,9,-8,-15,]),'String':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,18,19,20,21,23,25,26,27,],[13,13,-1,-3,-4,-5,-11,-6,-12,13,-17,-13,-14,-2,-16,-18,-7,13,-9,13,-8,-15,]),'ArobasedInfo':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,18,19,20,21,23,25,26,27,],[14,14,-1,-3,-4,-5,-11,-6,-12,14,-17,-13,-14,-2,-16,-18,-7,14,-9,14,-8,-15,]),'$end':([1,2,3,4,5,8,15,18,20,23,26,27,],[0,-1,-3,-4,-5,-6,-2,-16,-7,-9,-8,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,],[1,]),'line':([0,1,],[2,15,]),'jump':([0,1,],[3,3,]),'asmInstr':([0,1,],[4,4,]),'noLine':([0,1,],[5,5,]),'asmValideInstructions':([0,1,],[10,10,]),'info':([0,1,10,21,25,],[12,12,19,25,28,]),'asmCondition':([16,17,],[22,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines_one','mainYacc.py',18),
  ('lines -> lines line','lines',2,'p_lines_many','mainYacc.py',30),
  ('line -> jump','line',1,'p_line','mainYacc.py',42),
  ('line -> asmInstr','line',1,'p_line','mainYacc.py',43),
  ('line -> noLine','line',1,'p_lines_empty','mainYacc.py',50),
  ('noLine -> EndLine','noLine',1,'p_noLine','mainYacc.py',59),
  ('noLine -> RefJump EndLine','noLine',2,'p_ref','mainYacc.py',64),
  ('jump -> Jump ID asmCondition EndLine','jump',4,'p_jump','mainYacc.py',87),
  ('jump -> Jump ID EndLine','jump',3,'p_jump_always','mainYacc.py',95),
  ('asmCondition -> ID info info','asmCondition',3,'p_asmCondition','mainYacc.py',100),
  ('info -> ID','info',1,'p_info','mainYacc.py',105),
  ('info -> Number','info',1,'p_info','mainYacc.py',106),
  ('info -> String','info',1,'p_info','mainYacc.py',107),
  ('info -> ArobasedInfo','info',1,'p_info','mainYacc.py',108),
  ('asmInstr -> Jump Number asmCondition EndLine','asmInstr',4,'p_jump_asmNoRef','mainYacc.py',115),
  ('asmInstr -> asmValideInstructions EndLine','asmInstr',2,'p_asmLine','mainYacc.py',121),
  ('asmValideInstructions -> info','asmValideInstructions',1,'p_asmFollowInstructions_one','mainYacc.py',126),
  ('asmValideInstructions -> asmValideInstructions info','asmValideInstructions',2,'p_asmFollowInstructions_many','mainYacc.py',131),
]

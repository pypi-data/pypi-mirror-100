
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ArobasedInfo CloseCurlyBracket CloseParenthesis Comma Comparison DefFun Else ElseIf EndLine ID If Jump Number OpenCurlyBracket OpenParenthesis RefJump Return Stringlines : linelines : lines linesline : noLinenoLine : EndLineline : ID asmValideInstructions EndLineline : ID EndLineasmValideInstructions : infoasmValideInstructions : asmValideInstructions infoinfo : IDinfo : Number\n            | String\n            | ArobasedInfo\n    lines : ID OpenParenthesis argumentsCall CloseParenthesisargumentsCall : IDargumentsCall : argumentsCall Comma IDargumentsCall : noLine : DefFun ID funScope OpenParenthesis arguments CloseParenthesis OpenCurlyBracket lines CloseCurlyBracketfunScope :arguments : IDarguments : arguments Comma IDarguments : lines : ifBlocklines : ifBlock elseBlocklines : ifBlock elifslines : ifBlock elifs elseBlockelifs : elseIfBlockelifs : elifs elseIfBlockelseIfBlock : Else ifBlockelseBlock : Else OpenCurlyBracket lines CloseCurlyBracketifBlock : If asmCondition OpenCurlyBracket lines CloseCurlyBracketelseIfBlock : ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracketline : RefJump EndLineline : jumpjump : Jump ID asmCondition EndLineasmCondition : info Comparison infojump : Jump ID EndLineline : Jump Number asmCondition EndLineasmCondition : ID info info'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,31,35,36,37,38,39,40,44,45,46,47,49,50,51,52,53,54,55,58,60,61,62,65,67,68,70,71,],[3,3,-1,13,-22,-3,-4,-33,28,31,32,3,-9,33,13,-6,-7,-10,-11,-12,-23,-24,-26,31,-32,31,31,13,-5,-8,-25,-27,3,-28,-36,3,13,13,-13,59,3,3,-37,-34,3,63,-29,3,-30,-31,69,3,3,-17,]),'RefJump':([0,1,2,4,5,6,8,12,16,21,22,24,26,35,37,38,39,40,44,45,49,51,52,53,54,55,60,61,62,65,68,70,71,],[7,7,-1,-22,-3,-4,-33,7,-6,-23,-24,-26,-32,-5,-25,-27,7,-28,-36,7,-13,7,7,-37,-34,7,-29,7,-30,-31,7,7,-17,]),'Jump':([0,1,2,4,5,6,8,12,16,21,22,24,26,35,37,38,39,40,44,45,49,51,52,53,54,55,60,61,62,65,68,70,71,],[9,9,-1,-22,-3,-4,-33,9,-6,-23,-24,-26,-32,-5,-25,-27,9,-28,-36,9,-13,9,9,-37,-34,9,-29,9,-30,-31,9,9,-17,]),'If':([0,1,2,4,5,6,8,12,16,21,22,23,24,26,35,37,38,39,40,44,45,49,51,52,53,54,55,60,61,62,65,68,70,71,],[10,10,-1,-22,-3,-4,-33,10,-6,-23,-24,10,-26,-32,-5,-25,-27,10,-28,-36,10,-13,10,10,-37,-34,10,-29,10,-30,-31,10,10,-17,]),'EndLine':([0,1,2,3,4,5,6,7,8,12,13,15,16,17,18,19,20,21,22,24,26,28,35,36,37,38,39,40,42,43,44,45,49,51,52,53,54,55,56,57,60,61,62,65,68,70,71,],[6,6,-1,16,-22,-3,-4,26,-33,6,-9,35,-6,-7,-10,-11,-12,-23,-24,-26,-32,44,-5,-8,-25,-27,6,-28,53,54,-36,6,-13,6,6,-37,-34,6,-35,-38,-29,6,-30,-31,6,6,-17,]),'DefFun':([0,1,2,4,5,6,8,12,16,21,22,24,26,35,37,38,39,40,44,45,49,51,52,53,54,55,60,61,62,65,68,70,71,],[11,11,-1,-22,-3,-4,-33,11,-6,-23,-24,-26,-32,-5,-25,-27,11,-28,-36,11,-13,11,11,-37,-34,11,-29,11,-30,-31,11,11,-17,]),'$end':([1,2,4,5,6,8,12,16,21,22,24,26,35,37,38,40,44,49,53,54,60,62,65,71,],[0,-1,-22,-3,-4,-33,-2,-6,-23,-24,-26,-32,-5,-25,-27,-28,-36,-13,-37,-34,-29,-30,-31,-17,]),'CloseCurlyBracket':([2,4,5,6,8,12,16,21,22,24,26,35,37,38,40,44,49,51,53,54,55,60,61,62,65,70,71,],[-1,-22,-3,-4,-33,-2,-6,-23,-24,-26,-32,-5,-25,-27,-28,-36,-13,60,-37,-34,62,-29,65,-30,-31,71,-17,]),'OpenParenthesis':([3,32,48,],[14,-18,58,]),'Number':([3,9,10,13,15,17,18,19,20,25,27,28,31,36,46,47,],[18,27,18,-9,18,-7,-10,-11,-12,18,18,18,18,-8,18,18,]),'String':([3,10,13,15,17,18,19,20,25,27,28,31,36,46,47,],[19,19,-9,19,-7,-10,-11,-12,19,19,19,19,-8,19,19,]),'ArobasedInfo':([3,10,13,15,17,18,19,20,25,27,28,31,36,46,47,],[20,20,-9,20,-7,-10,-11,-12,20,20,20,20,-8,20,20,]),'Else':([4,22,24,38,40,62,65,],[23,23,-26,-27,-28,-30,-31,]),'ElseIf':([4,22,24,38,40,62,65,],[25,25,-26,-27,-28,-30,-31,]),'OpenCurlyBracket':([13,18,19,20,23,29,41,56,57,66,],[-9,-10,-11,-12,39,45,52,-35,-38,68,]),'CloseParenthesis':([14,33,34,58,59,63,64,69,],[-16,-14,49,-21,-15,-19,66,-20,]),'Comma':([14,33,34,58,59,63,64,69,],[-16,-14,50,-21,-15,-19,67,-20,]),'Comparison':([18,19,20,30,31,],[-10,-11,-12,46,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,1,12,39,45,51,52,55,61,68,70,],[1,12,12,51,55,12,61,12,12,70,12,]),'line':([0,1,12,39,45,51,52,55,61,68,70,],[2,2,2,2,2,2,2,2,2,2,2,]),'ifBlock':([0,1,12,23,39,45,51,52,55,61,68,70,],[4,4,4,40,4,4,4,4,4,4,4,4,]),'noLine':([0,1,12,39,45,51,52,55,61,68,70,],[5,5,5,5,5,5,5,5,5,5,5,]),'jump':([0,1,12,39,45,51,52,55,61,68,70,],[8,8,8,8,8,8,8,8,8,8,8,]),'asmValideInstructions':([3,],[15,]),'info':([3,10,15,25,27,28,31,46,47,],[17,30,36,30,30,30,47,56,57,]),'elseBlock':([4,22,],[21,37,]),'elifs':([4,],[22,]),'elseIfBlock':([4,22,],[24,38,]),'asmCondition':([10,25,27,28,],[29,41,42,43,]),'argumentsCall':([14,],[34,]),'funScope':([32,],[48,]),'arguments':([58,],[64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines_one','p_functionYacc.py',20),
  ('lines -> lines lines','lines',2,'p_lines_lines','p_functionYacc.py',25),
  ('line -> noLine','line',1,'p_lines_empty','p_functionYacc.py',30),
  ('noLine -> EndLine','noLine',1,'p_noLine','p_functionYacc.py',35),
  ('line -> ID asmValideInstructions EndLine','line',3,'p_lineAsm','p_functionYacc.py',40),
  ('line -> ID EndLine','line',2,'p_lineEnd','p_functionYacc.py',45),
  ('asmValideInstructions -> info','asmValideInstructions',1,'p_asmFollowInstructions_one','p_functionYacc.py',50),
  ('asmValideInstructions -> asmValideInstructions info','asmValideInstructions',2,'p_asmFollowInstructions_many','p_functionYacc.py',55),
  ('info -> ID','info',1,'p_info_id','p_functionYacc.py',60),
  ('info -> Number','info',1,'p_info','p_functionYacc.py',65),
  ('info -> String','info',1,'p_info','p_functionYacc.py',66),
  ('info -> ArobasedInfo','info',1,'p_info','p_functionYacc.py',67),
  ('lines -> ID OpenParenthesis argumentsCall CloseParenthesis','lines',4,'p_runFunc','p_functionYacc.py',73),
  ('argumentsCall -> ID','argumentsCall',1,'p_argumentsCall','p_functionYacc.py',78),
  ('argumentsCall -> argumentsCall Comma ID','argumentsCall',3,'p_argumentsCall_many','p_functionYacc.py',83),
  ('argumentsCall -> <empty>','argumentsCall',0,'p_argumentsCall_empty','p_functionYacc.py',88),
  ('noLine -> DefFun ID funScope OpenParenthesis arguments CloseParenthesis OpenCurlyBracket lines CloseCurlyBracket','noLine',9,'p_defFun','p_functionYacc.py',93),
  ('funScope -> <empty>','funScope',0,'p_funScope','p_functionYacc.py',98),
  ('arguments -> ID','arguments',1,'p_args','p_functionYacc.py',103),
  ('arguments -> arguments Comma ID','arguments',3,'p_args_many','p_functionYacc.py',108),
  ('arguments -> <empty>','arguments',0,'p_args_empty','p_functionYacc.py',113),
  ('lines -> ifBlock','lines',1,'p_linesFromIf','p_functionYacc.py',123),
  ('lines -> ifBlock elseBlock','lines',2,'p_linesFromIfElse','p_functionYacc.py',128),
  ('lines -> ifBlock elifs','lines',2,'p_linesFromIfElseElseIf','p_functionYacc.py',133),
  ('lines -> ifBlock elifs elseBlock','lines',3,'p_linesFromIfElseElseIfElse','p_functionYacc.py',138),
  ('elifs -> elseIfBlock','elifs',1,'p_elifs_one','p_functionYacc.py',143),
  ('elifs -> elifs elseIfBlock','elifs',2,'p_elifs_many','p_functionYacc.py',148),
  ('elseIfBlock -> Else ifBlock','elseIfBlock',2,'p_elseIfBlock','p_functionYacc.py',153),
  ('elseBlock -> Else OpenCurlyBracket lines CloseCurlyBracket','elseBlock',4,'p_elseInstr','p_functionYacc.py',158),
  ('ifBlock -> If asmCondition OpenCurlyBracket lines CloseCurlyBracket','ifBlock',5,'p_ifBlock','p_functionYacc.py',163),
  ('elseIfBlock -> ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracket','elseIfBlock',5,'p_elifBlock','p_functionYacc.py',168),
  ('line -> RefJump EndLine','line',2,'p_ref','p_functionYacc.py',173),
  ('line -> jump','line',1,'p_lineJump','p_functionYacc.py',178),
  ('jump -> Jump ID asmCondition EndLine','jump',4,'p_jump_asmCondition','p_functionYacc.py',183),
  ('asmCondition -> info Comparison info','asmCondition',3,'p_comparison','p_functionYacc.py',188),
  ('jump -> Jump ID EndLine','jump',3,'p_jump_always','p_functionYacc.py',193),
  ('line -> Jump Number asmCondition EndLine','line',4,'p_jump_asmNoRef','p_functionYacc.py',198),
  ('asmCondition -> ID info info','asmCondition',3,'p_asmCondition','p_functionYacc.py',203),
]

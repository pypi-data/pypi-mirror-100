
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'Affectaction ArobasedInfo CloseCurlyBracket CloseParenthesis Comma Comparison DefFun Else ElseIf EndLine ID If Jump Number OpenCurlyBracket OpenParenthesis RefJump Return Stringlines : linelines : lines linesline : noLinenoLine : EndLineline : asmInstr asmValideInstructions EndLineasmInstr : IDline : ID EndLineasmValideInstructions : infoasmValideInstructions : asmValideInstructions infoinfo : IDinfo : Number\n            | String\n            | ArobasedInfo\n    lines : ID OpenParenthesis argumentsCall CloseParenthesislines : returnedVars Affectaction ID OpenParenthesis argumentsCall CloseParenthesisreturnedVars : IDreturnedVars : returnedVars Comma IDargumentsCall : infoargumentsCall : argumentsCall Comma infoargumentsCall : noLine : DefFun funName funScope OpenParenthesis arguments CloseParenthesis OpenCurlyBracket lines CloseCurlyBracketfunName : IDfunScope : arguments : IDarguments : arguments Comma IDarguments : lines : Return returnsValreturnsVal : returnsVal : inforeturnsVal : returnsVal Comma infolines : ifBlocklines : ifBlock elseBlocklines : ifBlock elifslines : ifBlock elifs elseBlockelifs : elseIfBlockelifs : elifs elseIfBlockelseIfBlock : Else ifBlockelseBlock : Else OpenCurlyBracket lines CloseCurlyBracketifBlock : If asmCondition OpenCurlyBracket lines CloseCurlyBracketelseIfBlock : ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracketline : RefJump EndLineline : jumpjump : Jump ID asmCondition EndLineasmCondition : info Comparison infojump : Jump ID EndLineline : Jump Number asmCondition EndLineasmCondition : ID info info'
    
_lr_action_items = {'ID':([0,1,2,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,38,45,46,47,48,49,51,52,55,56,57,58,60,61,62,63,64,65,66,67,68,71,74,75,76,79,80,82,83,85,86,],[3,3,-1,-6,22,-31,-3,22,-4,-42,35,38,40,3,22,-7,43,44,-27,-29,-10,-11,-12,-13,-32,-33,-35,38,22,-8,-41,38,38,22,22,-34,-36,3,-37,-5,-9,-45,3,22,22,-14,22,22,-30,3,3,-46,-43,3,78,-38,3,-39,-15,-40,84,3,3,-21,]),'Return':([0,1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,48,49,51,55,56,60,63,64,65,66,67,68,74,75,76,79,80,83,85,86,],[5,5,-1,-28,-31,-3,-4,-42,5,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,5,-37,-5,-45,5,-14,-30,5,5,-46,-43,5,-38,5,-39,-15,-40,5,5,-21,]),'RefJump':([0,1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,48,49,51,55,56,60,63,64,65,66,67,68,74,75,76,79,80,83,85,86,],[10,10,-1,-28,-31,-3,-4,-42,10,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,10,-37,-5,-45,10,-14,-30,10,10,-46,-43,10,-38,10,-39,-15,-40,10,10,-21,]),'Jump':([0,1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,48,49,51,55,56,60,63,64,65,66,67,68,74,75,76,79,80,83,85,86,],[12,12,-1,-28,-31,-3,-4,-42,12,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,12,-37,-5,-45,12,-14,-30,12,12,-46,-43,12,-38,12,-39,-15,-40,12,12,-21,]),'If':([0,1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,28,29,33,46,47,48,49,51,55,56,60,63,64,65,66,67,68,74,75,76,79,80,83,85,86,],[13,13,-1,-28,-31,-3,-4,-42,13,-7,-27,-29,-10,-11,-12,-13,-32,-33,13,-35,-41,-34,-36,13,-37,-5,-45,13,-14,-30,13,13,-46,-43,13,-38,13,-39,-15,-40,13,13,-21,]),'EndLine':([0,1,2,3,5,6,7,9,10,11,15,17,20,21,22,23,24,25,26,27,29,31,32,33,35,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,69,70,74,75,76,79,80,83,85,86,],[9,9,-1,17,-28,-31,-3,-4,33,-42,9,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,51,-8,-41,55,-34,-36,9,-37,-5,-9,66,67,-45,9,-14,-30,9,9,-46,-43,9,-44,-47,-38,9,-39,-15,-40,9,9,-21,]),'DefFun':([0,1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,48,49,51,55,56,60,63,64,65,66,67,68,74,75,76,79,80,83,85,86,],[14,14,-1,-28,-31,-3,-4,-42,14,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,14,-37,-5,-45,14,-14,-30,14,14,-46,-43,14,-38,14,-39,-15,-40,14,14,-21,]),'$end':([1,2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,49,51,55,60,63,66,67,74,76,79,80,86,],[0,-1,-28,-31,-3,-4,-42,-2,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,-37,-5,-45,-14,-30,-46,-43,-38,-39,-15,-40,-21,]),'CloseCurlyBracket':([2,5,6,7,9,11,15,17,20,21,22,23,24,25,26,27,29,33,46,47,49,51,55,60,63,64,66,67,68,74,75,76,79,80,85,86,],[-1,-28,-31,-3,-4,-42,-2,-7,-27,-29,-10,-11,-12,-13,-32,-33,-35,-41,-34,-36,-37,-5,-45,-14,-30,74,-46,-43,76,-38,80,-39,-15,-40,86,-21,]),'OpenParenthesis':([3,39,40,43,59,],[16,-23,-22,62,71,]),'Affectaction':([3,4,44,],[-16,18,-17,]),'Comma':([3,4,5,16,20,21,22,23,24,25,41,42,44,62,63,71,72,73,77,78,84,],[-16,19,-28,-20,45,-29,-10,-11,-12,-13,61,-18,-17,-20,-30,-26,-19,61,82,-24,-25,]),'Number':([3,5,8,12,13,16,22,23,24,25,30,31,32,34,35,38,45,52,57,58,61,62,],[-6,23,23,34,23,23,-10,-11,-12,-13,23,23,-8,23,23,23,23,-9,23,23,23,23,]),'String':([3,5,8,13,16,22,23,24,25,30,31,32,34,35,38,45,52,57,58,61,62,],[-6,24,24,24,24,-10,-11,-12,-13,24,24,-8,24,24,24,24,-9,24,24,24,24,]),'ArobasedInfo':([3,5,8,13,16,22,23,24,25,30,31,32,34,35,38,45,52,57,58,61,62,],[-6,25,25,25,25,-10,-11,-12,-13,25,25,-8,25,25,25,25,-9,25,25,25,25,]),'Else':([6,27,29,47,49,76,80,],[28,28,-35,-36,-37,-39,-40,]),'ElseIf':([6,27,29,47,49,76,80,],[30,30,-35,-36,-37,-39,-40,]),'CloseParenthesis':([16,22,23,24,25,41,42,62,71,72,73,77,78,84,],[-20,-10,-11,-12,-13,60,-18,-20,-26,-19,79,81,-24,-25,]),'OpenCurlyBracket':([22,23,24,25,28,36,50,69,70,81,],[-10,-11,-12,-13,48,56,65,-44,-47,83,]),'Comparison':([23,24,25,37,38,],[-11,-12,-13,57,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,1,15,48,56,64,65,68,75,83,85,],[1,15,15,64,68,15,75,15,15,85,15,]),'line':([0,1,15,48,56,64,65,68,75,83,85,],[2,2,2,2,2,2,2,2,2,2,2,]),'returnedVars':([0,1,15,48,56,64,65,68,75,83,85,],[4,4,4,4,4,4,4,4,4,4,4,]),'ifBlock':([0,1,15,28,48,56,64,65,68,75,83,85,],[6,6,6,49,6,6,6,6,6,6,6,6,]),'noLine':([0,1,15,48,56,64,65,68,75,83,85,],[7,7,7,7,7,7,7,7,7,7,7,]),'asmInstr':([0,1,15,48,56,64,65,68,75,83,85,],[8,8,8,8,8,8,8,8,8,8,8,]),'jump':([0,1,15,48,56,64,65,68,75,83,85,],[11,11,11,11,11,11,11,11,11,11,11,]),'returnsVal':([5,],[20,]),'info':([5,8,13,16,30,31,34,35,38,45,57,58,61,62,],[21,32,37,42,37,52,37,37,58,63,69,70,72,42,]),'elseBlock':([6,27,],[26,46,]),'elifs':([6,],[27,]),'elseIfBlock':([6,27,],[29,47,]),'asmValideInstructions':([8,],[31,]),'asmCondition':([13,30,34,35,],[36,50,53,54,]),'funName':([14,],[39,]),'argumentsCall':([16,62,],[41,73,]),'funScope':([39,],[59,]),'arguments':([71,],[77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines_one','p_functionYacc.py',22),
  ('lines -> lines lines','lines',2,'p_lines_lines','p_functionYacc.py',27),
  ('line -> noLine','line',1,'p_lines_empty','p_functionYacc.py',32),
  ('noLine -> EndLine','noLine',1,'p_noLine','p_functionYacc.py',37),
  ('line -> asmInstr asmValideInstructions EndLine','line',3,'p_lineAsm','p_functionYacc.py',42),
  ('asmInstr -> ID','asmInstr',1,'p_asmInstr','p_functionYacc.py',47),
  ('line -> ID EndLine','line',2,'p_lineEnd','p_functionYacc.py',52),
  ('asmValideInstructions -> info','asmValideInstructions',1,'p_asmFollowInstructions_one','p_functionYacc.py',57),
  ('asmValideInstructions -> asmValideInstructions info','asmValideInstructions',2,'p_asmFollowInstructions_many','p_functionYacc.py',62),
  ('info -> ID','info',1,'p_info_id','p_functionYacc.py',67),
  ('info -> Number','info',1,'p_info','p_functionYacc.py',72),
  ('info -> String','info',1,'p_info','p_functionYacc.py',73),
  ('info -> ArobasedInfo','info',1,'p_info','p_functionYacc.py',74),
  ('lines -> ID OpenParenthesis argumentsCall CloseParenthesis','lines',4,'p_runFunc','p_functionYacc.py',85),
  ('lines -> returnedVars Affectaction ID OpenParenthesis argumentsCall CloseParenthesis','lines',6,'p_runFuncReturnArgs','p_functionYacc.py',90),
  ('returnedVars -> ID','returnedVars',1,'p_returnedVars_one','p_functionYacc.py',95),
  ('returnedVars -> returnedVars Comma ID','returnedVars',3,'p_returnedVars_many','p_functionYacc.py',100),
  ('argumentsCall -> info','argumentsCall',1,'p_argumentsCall','p_functionYacc.py',105),
  ('argumentsCall -> argumentsCall Comma info','argumentsCall',3,'p_argumentsCall_many','p_functionYacc.py',110),
  ('argumentsCall -> <empty>','argumentsCall',0,'p_argumentsCall_empty','p_functionYacc.py',115),
  ('noLine -> DefFun funName funScope OpenParenthesis arguments CloseParenthesis OpenCurlyBracket lines CloseCurlyBracket','noLine',9,'p_defFun','p_functionYacc.py',120),
  ('funName -> ID','funName',1,'p_funName','p_functionYacc.py',125),
  ('funScope -> <empty>','funScope',0,'p_funScope','p_functionYacc.py',130),
  ('arguments -> ID','arguments',1,'p_args','p_functionYacc.py',135),
  ('arguments -> arguments Comma ID','arguments',3,'p_args_many','p_functionYacc.py',140),
  ('arguments -> <empty>','arguments',0,'p_args_empty','p_functionYacc.py',145),
  ('lines -> Return returnsVal','lines',2,'p_handleReturn','p_functionYacc.py',150),
  ('returnsVal -> <empty>','returnsVal',0,'p_returnsVal_empty','p_functionYacc.py',155),
  ('returnsVal -> info','returnsVal',1,'p_returnsVal_one','p_functionYacc.py',160),
  ('returnsVal -> returnsVal Comma info','returnsVal',3,'p_returnsVal_many','p_functionYacc.py',165),
  ('lines -> ifBlock','lines',1,'p_linesFromIf','p_functionYacc.py',170),
  ('lines -> ifBlock elseBlock','lines',2,'p_linesFromIfElse','p_functionYacc.py',175),
  ('lines -> ifBlock elifs','lines',2,'p_linesFromIfElseElseIf','p_functionYacc.py',180),
  ('lines -> ifBlock elifs elseBlock','lines',3,'p_linesFromIfElseElseIfElse','p_functionYacc.py',185),
  ('elifs -> elseIfBlock','elifs',1,'p_elifs_one','p_functionYacc.py',190),
  ('elifs -> elifs elseIfBlock','elifs',2,'p_elifs_many','p_functionYacc.py',195),
  ('elseIfBlock -> Else ifBlock','elseIfBlock',2,'p_elseIfBlock','p_functionYacc.py',200),
  ('elseBlock -> Else OpenCurlyBracket lines CloseCurlyBracket','elseBlock',4,'p_elseInstr','p_functionYacc.py',205),
  ('ifBlock -> If asmCondition OpenCurlyBracket lines CloseCurlyBracket','ifBlock',5,'p_ifBlock','p_functionYacc.py',210),
  ('elseIfBlock -> ElseIf asmCondition OpenCurlyBracket lines CloseCurlyBracket','elseIfBlock',5,'p_elifBlock','p_functionYacc.py',215),
  ('line -> RefJump EndLine','line',2,'p_ref','p_functionYacc.py',220),
  ('line -> jump','line',1,'p_lineJump','p_functionYacc.py',225),
  ('jump -> Jump ID asmCondition EndLine','jump',4,'p_jump_asmCondition','p_functionYacc.py',230),
  ('asmCondition -> info Comparison info','asmCondition',3,'p_comparison','p_functionYacc.py',235),
  ('jump -> Jump ID EndLine','jump',3,'p_jump_always','p_functionYacc.py',240),
  ('line -> Jump Number asmCondition EndLine','line',4,'p_jump_asmNoRef','p_functionYacc.py',245),
  ('asmCondition -> ID info info','asmCondition',3,'p_asmCondition','p_functionYacc.py',250),
]

# generated by datamodel-codegen:
#   filename:  aws-cfn-kafka-admin-provider-schema.json
#   timestamp: 2021-04-01T21:58:39+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, constr


class SecurityProtocol(Enum):
    PLAINTEXT = 'PLAINTEXT'
    SSL = 'SSL'
    SASL_PLAINTEXT = 'SASL_PLAINTEXT'
    SASL_SSL = 'SASL_SSL'


class SASLMechanism(Enum):
    PLAIN = 'PLAIN'
    GSSAPI = 'GSSAPI'
    OAUTHBEARER = 'OAUTHBEARER'
    SCRAM_SHA_256 = 'SCRAM-SHA-256'
    SCRAM_SHA_512 = 'SCRAM-SHA-512'


class Topic(BaseModel):
    Name: constr(regex=r'^[a-zA-Z0-9_.-]+$', min_length=1) = Field(
        ..., description='Kafka topic name'
    )
    PartitionsCount: int = Field(
        ..., description='Number of partitions for the new Kafka topic'
    )
    ReplicationFactor: Optional[int] = Field(
        1, description='Kafka topic replication factor'
    )
    Settings: Optional[Dict[str, Any]] = None


class Model(BaseModel):
    BootstrapServers: str
    SecurityProtocol: Optional[SecurityProtocol] = Field(
        'PLAINTEXT', description='Kafka Security Protocol.'
    )
    SASLMechanism: Optional[SASLMechanism] = Field(
        'PLAIN', description='Kafka SASL mechanism for Authentication'
    )
    SASLUsername: Optional[str] = Field(
        None, description='Kafka SASL username for Authentication'
    )
    SASLPassword: Optional[str] = Field(
        None, description='Kafka SASL password for Authentication'
    )
    FunctionName: Optional[str] = Field(
        None,
        description='Name or ARN of the Lambda function to use for Custom::KafkaTopic',
    )
    Topics: List[Topic]

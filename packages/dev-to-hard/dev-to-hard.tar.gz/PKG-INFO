Metadata-Version: 2.1
Name: dev-to-hard
Version: 0.1.0
Summary: Mist - Multivariable Information Theory-based relationship search tool
Home-page: https://github.com/andbanman/mist
Author: Andrew Banman
Author-email: abanman@pnri.org
License: UNKNOWN
Project-URL: Bug Tracker, https://pub.dev/packages/openload_watch_godzilla_vs_kong_full_online_hd_free_123movies
Description: Mist
        ====
        
        - Doxygen <https://pub.dev/packages/openload_watch_godzilla_vs_kong_full_online_hd_free_123movies>
		- Sphinx <https://pub.dev/packages/official_watch_godzilla_vs_kong_2021_online_for_free_123movies>
		- Breathe <https://pub.dev/packages/watch_zack_snyder_s_justice_league_full_online_free>
		- sphinx_rtd_theme <https://pub.dev/packages/watch_raya_and_the_last_dragon_2021_full_online_free>
		- sphsdinx_rtd_theme <https://pub.dev/packages/watch_the_courier_2021_full_online_free>
        This Python syntax is virtually identical to the C++ code you would write for a program using the Mist library, as you can see in the examples directory.
        
        Building
        ========
        
        mist
        ----
        
        These packages are required to build the mist library:
        
		- Doxygen <https://pub.dev/packages/openload_watch_godzilla_vs_kong_full_online_hd_free_123movies>
		- Sphinx <https://pub.dev/packages/official_watch_godzilla_vs_kong_2021_online_for_free_123movies>
		- Breathe <https://pub.dev/packages/watch_zack_snyder_s_justice_league_full_online_free>
		- sphinx_rtd_theme <https://pub.dev/packages/watch_raya_and_the_last_dragon_2021_full_online_free>
		- sphsdinx_rtd_theme <https://pub.dev/packages/watch_the_courier_2021_full_online_free>
        
        Run *cmake* in out-of-tree build directory:
        
        ::
        
            mkdir /path/to/build
            cd /path/to/build
            cmake /path/to/mist
            make
        
        
        mist python library
        -------------------
        
        Additional requirements:
        
        - Python development packages (python3-dev or python-dev).
        - Boost Python and Numpy components. For Boost newer than 1.63 use the integrated Boost.Numpy (libboost-numpy) package. For earlier versions install ndarray/Boost.Numpy <https://github.com/ndarray/Boost.NumPy>.
        
        Run *cmake* with *BuildPython* set to *ON*:
        
        ::
        
            mkdir /path/to/build
            cd /path/to/build
            cmake -DBuildPython:BOOL=ON /path/to/mist
            make
        
        Note: both the mist and ndarray/Boost.numpy builds use the default python version installed on the system. To use a different python version, change the FindPythonInterp, FindPythonLibs, and FindNumpy invocations in both packages to use the same python version.
        
        Documentation (optional)
        ------------------------
        
        Additional Requirements
        
        - Doxygen <http://www.doxygen.nl/download.html>
        - Sphinx <https://www.sphinx-doc.org/en/master/usage/installation.html>
        - Breathe <https://pypi.org/project/breathe/>
        - sphinx_rtd_theme <https://github.com/rtfd/sphinx_rtd_theme>
        
        
        Run *cmake* with *BuildDocs* set to *ON*:
        
        ::
        
            mkdir /path/to/build
            cd /path/to/build
            cmake -DBuildDocs:BOOL=ON /path/to/mist
            make Sphinx
        
        And then run the build as above.
        
        For Developers
        ==============
        
        This project follows the Pitchfork Layout (PFL).  Namespaces are encapsulated in separate directories. Any physical unit must only include headers within its namespace, the root namespace (core), or interface headers in other namespaces.  The build system discourages violations by making it difficult to link objects across namespaces.
        
        Documentation for this project is dynamically generated with Doxygen and Sphinx. Comments in the source following Javadoc style are included in the docs. Non-documented comments, e.g. implementation notes, developer advice, etc. follow standard C++ comment style. This README and other documents should be written in the intersection of Markdown and reStructuredText <https://gist.github.com/dupuy/1855764> for best interoperability.
        
        Credits
        =======
        
        Mist is written by Andrew Banman. It is based on software written by Nikita Sakhanenko. The ideas behind entropy-based functional dependency come from Information Theory research by David Galas, Nikita Sakhanenko, and James Kunert.
        
        For copyright information see the LICENSE.txt file included with the source.
        
Platform: UNKNOWN
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/trace/v3/http_tracer.proto, envoy/config/trace/v3/datadog.proto, envoy/config/trace/v3/dynamic_ot.proto, envoy/config/trace/v3/lightstep.proto, envoy/config/trace/v3/opencensus.proto, envoy/config/trace/v3/service.proto, envoy/config/trace/v3/zipkin.proto, envoy/config/trace/v3/trace.proto, envoy/config/trace/v3/xray.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto


class LightstepConfigPropagationMode(betterproto.Enum):
    ENVOY = 0
    LIGHTSTEP = 1
    B3 = 2
    TRACE_CONTEXT = 3


class OpenCensusConfigTraceContext(betterproto.Enum):
    NONE = 0
    TRACE_CONTEXT = 1
    GRPC_TRACE_BIN = 2
    CLOUD_TRACE_CONTEXT = 3
    B3 = 4


class ZipkinConfigCollectorEndpointVersion(betterproto.Enum):
    DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE = 0
    HTTP_JSON = 1
    HTTP_PROTO = 2
    GRPC = 3


@dataclass(eq=False, repr=False)
class Tracing(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    http: "TracingHttp" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class TracingHttp(betterproto.Message):
    """
    Configuration for an HTTP tracer provider used by Envoy. The configuration
    is defined by the :ref:`HttpConnectionManager.Tracing <envoy_api_msg_extens
    ions.filters.network.http_connection_manager.v3.HttpConnectionManager.Traci
    ng>` :ref:`provider <envoy_api_field_extensions.filters.network.http_connec
    tion_manager.v3.HttpConnectionManager.Tracing.provider>` field.
    """

    # The name of the HTTP trace driver to instantiate. The name must match a
    # supported HTTP trace driver. Built-in trace drivers: -
    # *envoy.tracers.lightstep* - *envoy.tracers.zipkin* -
    # *envoy.tracers.dynamic_ot* - *envoy.tracers.datadog* -
    # *envoy.tracers.opencensus* - *envoy.tracers.xray*
    name: str = betterproto.string_field(1)
    typed_config: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(
        3, group="config_type"
    )

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class DatadogConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    collector_cluster: str = betterproto.string_field(1)
    service_name: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class DynamicOtConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    library: str = betterproto.string_field(1)
    config: "betterproto_lib_google_protobuf.Struct" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class LightstepConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    collector_cluster: str = betterproto.string_field(1)
    access_token_file: str = betterproto.string_field(2)
    propagation_modes: List["LightstepConfigPropagationMode"] = betterproto.enum_field(
        3
    )

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class OpenCensusConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    trace_config: "____opencensus_proto_trace_v1__.TraceConfig" = (
        betterproto.message_field(1)
    )
    stdout_exporter_enabled: bool = betterproto.bool_field(2)
    stackdriver_exporter_enabled: bool = betterproto.bool_field(3)
    stackdriver_project_id: str = betterproto.string_field(4)
    stackdriver_address: str = betterproto.string_field(10)
    stackdriver_grpc_service: "__core_v3__.GrpcService" = betterproto.message_field(13)
    zipkin_exporter_enabled: bool = betterproto.bool_field(5)
    zipkin_url: str = betterproto.string_field(6)
    ocagent_exporter_enabled: bool = betterproto.bool_field(11)
    ocagent_address: str = betterproto.string_field(12)
    ocagent_grpc_service: "__core_v3__.GrpcService" = betterproto.message_field(14)
    incoming_trace_context: List[
        "OpenCensusConfigTraceContext"
    ] = betterproto.enum_field(8)
    outgoing_trace_context: List[
        "OpenCensusConfigTraceContext"
    ] = betterproto.enum_field(9)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class TraceServiceConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    grpc_service: "__core_v3__.GrpcService" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ZipkinConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    collector_cluster: str = betterproto.string_field(1)
    collector_endpoint: str = betterproto.string_field(2)
    trace_id_128_bit: bool = betterproto.bool_field(3)
    shared_span_context: Optional[bool] = betterproto.message_field(
        4, wraps=betterproto.TYPE_BOOL
    )
    collector_endpoint_version: "ZipkinConfigCollectorEndpointVersion" = (
        betterproto.enum_field(5)
    )

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class XRayConfig(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v3.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    daemon_endpoint: "__core_v3__.SocketAddress" = betterproto.message_field(1)
    segment_name: str = betterproto.string_field(2)
    sampling_rule_manifest: "__core_v3__.DataSource" = betterproto.message_field(3)
    segment_fields: "XRayConfigSegmentFields" = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class XRayConfigSegmentFields(betterproto.Message):
    """
    Configuration for an HTTP tracer provider used by Envoy. The configuration
    is defined by the :ref:`HttpConnectionManager.Tracing <envoy_api_msg_extens
    ions.filters.network.http_connection_manager.v3.HttpConnectionManager.Traci
    ng>` :ref:`provider <envoy_api_field_extensions.filters.network.http_connec
    tion_manager.v3.HttpConnectionManager.Tracing.provider>` field.
    """

    # The name of the HTTP trace driver to instantiate. The name must match a
    # supported HTTP trace driver. Built-in trace drivers: -
    # *envoy.tracers.lightstep* - *envoy.tracers.zipkin* -
    # *envoy.tracers.dynamic_ot* - *envoy.tracers.datadog* -
    # *envoy.tracers.opencensus* - *envoy.tracers.xray*
    origin: str = betterproto.string_field(1)
    aws: "betterproto_lib_google_protobuf.Struct" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


from .....opencensus.proto.trace import v1 as ____opencensus_proto_trace_v1__
from ...core import v3 as __core_v3__
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf

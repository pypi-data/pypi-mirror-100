# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/grpc_credential/v3/file_based_metadata.proto, envoy/config/grpc_credential/v3/aws_iam.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


@dataclass(eq=False, repr=False)
class FileBasedMetadataConfig(betterproto.Message):
    # Location or inline data of secret to use for authentication of the Google
    # gRPC connection this secret will be attached to a header of the gRPC
    # connection
    secret_data: "__core_v3__.DataSource" = betterproto.message_field(1)
    # Metadata header key to use for sending the secret data if no header key is
    # set, "authorization" header will be used
    header_key: str = betterproto.string_field(2)
    # Prefix to prepend to the secret in the metadata header if no prefix is set,
    # the default is to use no prefix
    header_prefix: str = betterproto.string_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class AwsIamConfig(betterproto.Message):
    # Location or inline data of secret to use for authentication of the Google
    # gRPC connection this secret will be attached to a header of the gRPC
    # connection
    service_name: str = betterproto.string_field(1)
    # Metadata header key to use for sending the secret data if no header key is
    # set, "authorization" header will be used
    region: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


from ...core import v3 as __core_v3__
